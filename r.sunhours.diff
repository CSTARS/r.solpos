--- /home/quinn/grass-7.4.0/raster/r.sunhours/main.c	2017-11-12 10:39:57.000000000 -0800
+++ main.c	2018-05-09 01:23:09.449067981 -0700
@@ -37,12 +37,12 @@
     struct GModule *module;
     struct
     {
-	struct Option *elev, *azimuth, *sunhours, *year,
+      struct Option *elev, *azimuth, *sretr, *ssetr, *hrang, *sunhours, *year,
 	    *month, *day, *hour, *minutes, *seconds;
 	struct Flag *lst_time, *no_solpos;
     } parm;
     struct Cell_head window;
-    FCELL *elevbuf, *azimuthbuf, *sunhourbuf;
+    FCELL *elevbuf, *azimuthbuf, *sretrbuf, *ssetrbuf, *hrangbuf,  *sunhourbuf;
     struct History hist;
 
     /* projection information of input map */
@@ -50,8 +50,8 @@
     struct pj_info iproj;	/* input map proj parameters  */
     struct pj_info oproj;	/* output map proj parameters  */
 
-    char *elev_name, *azimuth_name, *sunhour_name;
-    int elev_fd, azimuth_fd, sunhour_fd;
+    char *elev_name, *azimuth_name, *sretr_name, *ssetr_name, *hrang_name, *sunhour_name;
+    int elev_fd, azimuth_fd, sretr_fd, ssetr_fd, hrang_fd, sunhour_fd;
     double ha, ha_cos, s_gamma, s_elevation, s_azimuth;
     double s_declination, sd_sin, sd_cos;
     double se_sin, sa_cos;
@@ -88,6 +88,24 @@
     parm.azimuth->label = _("Output raster map with solar azimuth angle");
     parm.azimuth->required = NO;
     
+    parm.sretr = G_define_standard_option(G_OPT_R_OUTPUT);
+    parm.sretr->key = "sretr";
+    parm.sretr->label = _("Output raster map with sunrise time, minutes from midnight");
+    parm.sretr->description = _("Sunrise hour requires SOLPOS use and Greenwich standard time");
+    parm.sretr->required = NO;
+
+    parm.ssetr = G_define_standard_option(G_OPT_R_OUTPUT);
+    parm.ssetr->key = "ssetr";
+    parm.ssetr->label = _("Output raster map with sunset time, minutes from midnight");
+    parm.ssetr->description = _("Sunset hour requires SOLPOS use and Greenwich standard time");
+    parm.ssetr->required = NO;
+
+    parm.hrang = G_define_standard_option(G_OPT_R_OUTPUT);
+    parm.hrang->key = "hrang";
+    parm.hrang->label = _("Output raster map with hour angle--hour of sun from solar noon, degrees WEST");
+    parm.hrang->description = _("Hour angle requires SOLPOS use and Greenwich standard time");
+    parm.hrang->required = NO;
+
     parm.sunhours = G_define_standard_option(G_OPT_R_OUTPUT);
     parm.sunhours->key = "sunhour";
     parm.sunhours->label = _("Output raster map with sunshine hours");
@@ -162,8 +180,11 @@
     /* require at least one output */
     elev_name = parm.elev->answer;
     azimuth_name = parm.azimuth->answer;
+    sretr_name = parm.sretr->answer;
+    ssetr_name = parm.ssetr->answer;
+    hrang_name = parm.hrang->answer;
     sunhour_name = parm.sunhours->answer;
-    if (!elev_name && !azimuth_name && !sunhour_name)
+    if (!elev_name && !azimuth_name && !sretr_name && !ssetr_name && !sunhour_name)
 	G_fatal_error(_("No output requested, exiting."));
 
     year = atoi(parm.year->answer);
@@ -201,9 +222,18 @@
 	else
 	    G_message(_("Time will be interpreted as Greenwich standard time."));
 	
-	if (sunhour_name)
+	if (sretr_name)
+	    G_fatal_error(_("Sunrise time requires NREL SOLPOS."));
+
+    	if (ssetr_name)
+	    G_fatal_error(_("Sunset time requires NREL SOLPOS."));
+
+    	if (hrang_name)
+	    G_fatal_error(_("Hour Angle requires NREL SOLPOS."));
+
+    	if (sunhour_name)
 	    G_fatal_error(_("Sunshine hours require NREL SOLPOS."));
-    }
+}
 
     if ((G_projection() != PROJECTION_LL)) {
 	if (window.proj == 0)
@@ -239,7 +269,7 @@
 	pd.function = S_ZENETR;
 	if (azimuth_name)
 	    pd.function = S_SOLAZM;
-	if (sunhour_name)
+	if (sunhour_name || sretr_name || ssetr_name || hrang_name )
 	    pd.function |= S_SRSS;
     }
     if (month == -1)
@@ -341,8 +371,41 @@
 	azimuth_fd = -1;
     }
 
+    if (sretr_name) {
+	if ((sretr_fd = Rast_open_new(sretr_name, FCELL_TYPE)) < 0)
+	    G_fatal_error(_("Unable to create raster map <%s>"), sretr_name);
+
+	sretrbuf = Rast_allocate_f_buf();
+    }
+    else {
+	sretrbuf = NULL;
+	sretr_fd = -1;
+    }
+
+    if (ssetr_name) {
+	if ((ssetr_fd = Rast_open_new(ssetr_name, FCELL_TYPE)) < 0)
+	    G_fatal_error(_("Unable to create raster map <%s>"), ssetr_name);
+
+	ssetrbuf = Rast_allocate_f_buf();
+    }
+    else {
+	ssetrbuf = NULL;
+	ssetr_fd = -1;
+    }
+
+    if (hrang_name) {
+	if ((hrang_fd = Rast_open_new(hrang_name, FCELL_TYPE)) < 0)
+	    G_fatal_error(_("Unable to create raster map <%s>"), hrang_name);
+
+	hrangbuf = Rast_allocate_f_buf();
+    }
+    else {
+	hrangbuf = NULL;
+	hrang_fd = -1;
+    }
+
     if (sunhour_name) {
-	if ((sunhour_fd = Rast_open_new(sunhour_name, FCELL_TYPE)) < 0)
+      if ((sunhour_fd = Rast_open_new(sunhour_name, FCELL_TYPE)) < 0)
 	    G_fatal_error(_("Unable to create raster map <%s>"), sunhour_name);
 
 	sunhourbuf = Rast_allocate_f_buf();
@@ -441,7 +504,19 @@
 
 		azimuthbuf[col] = s_azimuth;
 	    }
-	    
+
+	    if (sretr_name) {
+	      sretrbuf[col] = pd.sretr;
+	    }
+
+	    if (ssetr_name) {
+	      ssetrbuf[col] = pd.ssetr;
+	    }
+
+	    if (hrang_name) {
+	      ssetrbuf[col] = pd.hrang;
+	    }
+
 	    if (sunhour_name) {
 		sunhourbuf[col] = (pd.ssetr - pd.sretr) / 60.;
 		if (sunhourbuf[col] > 24.)
@@ -449,12 +524,17 @@
 		if (sunhourbuf[col] < 0.)
 		    sunhourbuf[col] = 0.;
 	    }
-
 	}
 	if (elev_name)
 	    Rast_put_f_row(elev_fd, elevbuf);
 	if (azimuth_name)
 	    Rast_put_f_row(azimuth_fd, azimuthbuf);
+	if (sretr_name)
+	    Rast_put_f_row(sretr_fd, sretrbuf);
+	if (ssetr_name)
+	    Rast_put_f_row(ssetr_fd, ssetrbuf);
+	if (hrang_name)
+	    Rast_put_f_row(hrang_fd, hrangbuf);
 	if (sunhour_name)
 	    Rast_put_f_row(sunhour_fd, sunhourbuf);
     }
@@ -474,6 +554,27 @@
 	Rast_command_history(&hist);
 	Rast_write_history(azimuth_name, &hist);
     }
+    if (sretr_name) {
+	Rast_close(sretr_fd);
+	/* writing history file */
+	Rast_short_history(sretr_name, "raster", &hist);
+	Rast_command_history(&hist);
+	Rast_write_history(sretr_name, &hist);
+    }
+    if (ssetr_name) {
+	Rast_close(ssetr_fd);
+	/* writing history file */
+	Rast_short_history(ssetr_name, "raster", &hist);
+	Rast_command_history(&hist);
+	Rast_write_history(ssetr_name, &hist);
+    }
+    if (hrang_name) {
+	Rast_close(hrang_fd);
+	/* writing history file */
+	Rast_short_history(hrang_name, "raster", &hist);
+	Rast_command_history(&hist);
+	Rast_write_history(hrang_name, &hist);
+    }
     if (sunhour_name) {
 	Rast_close(sunhour_fd);
 	/* writing history file */
@@ -524,3 +625,4 @@
 
     return 0;
 }
+
